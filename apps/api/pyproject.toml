[project]
name = "countermeasure-api"
version = "0.1.0"
description = "Countermeasure API Service - Enterprise Threat Detection Platform"
authors = [
    {name = "Paul Hutelmyer", email = "paul.hutelmyer@example.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "sqlalchemy>=2.0.36",
    "alembic>=1.14.0",
    "asyncpg>=0.30.0",
    "psycopg[binary]>=3.2.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.20",
    "email-validator>=2.2.0",
    "python-dateutil>=2.9.0",
    "httpx>=0.27.0",
    "aiofiles>=24.1.0",
    "prometheus-client>=0.21.0",
    "structlog>=24.4.0",
    "pyyaml>=6.0.0",
    "click>=8.1.0",
    "bcrypt>=4.2.0,<5.0.0",
    "sentry-sdk[fastapi]>=2.16.0",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.27.0",
    "faker>=30.0.0",
    "factory-boy>=3.3.0",
    "locust>=2.31.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "bandit>=1.7.9",
    "safety>=3.2.0",
    "pre-commit>=3.8.0",
    "aiosqlite>=0.21.0",
    "aiohttp>=3.10.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
]
asyncio_mode = "auto"

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict = true
show_error_codes = true
warn_unreachable = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_no_return = true

# Override for specific modules
[[tool.mypy.overrides]]
module = [
    "alembic.*",
    "sqlalchemy.*",
    "passlib.*",
    "jose.*",
    "redis.*",
]
ignore_missing_imports = true

# Bandit security linting configuration
[tool.bandit]
exclude_dirs = ["tests", "migrations", "alembic"]
skips = [
    "B101",  # assert_used - assert statements are used in tests
    "B603",  # subprocess_without_shell_equals_true - we need shell=False for security
    "B607",  # start_process_with_partial_path - using full paths where appropriate
]

# Test-specific overrides
[tool.bandit.assert_used]
exclude = ["**/tests/**"]
